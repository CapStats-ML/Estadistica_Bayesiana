rownames(MInci) = colnames(MInci)
MInci = MInci/10000
corrplot::corrplot(corr = MInci,
is.corr = FALSE,
addgrid.col = NA,
method = "color",
tl.pos = "n",order = "AOE")
MEN <- read_csv("Data/MEN.csv")
MEN <- MEN %>%
filter(AÑO == 2022)
shp1 <- sf::st_read("Data/MGN2023_MCPIO_POLITICO/Municipios.shp", quiet = TRUE)
shp1$COD_MUN <- paste(shp1$DPTO_CCDGO, shp1$MPIO_CCDGO, sep = "")
shp1$COD_MUN <- as.character(shp1$COD_MUN)
MEN$CÓDIGO_MUNICIPIO <- as.character(MEN$CÓDIGO_MUNICIPIO)
shp1$COD_MUN <- ifelse(nchar(shp1$COD_MUN) == 4,
paste0("0", shp1$COD_MUN),
shp1$COD_MUN)
MEN$CÓDIGO_MUNICIPIO <- ifelse(nchar(MEN$CÓDIGO_MUNICIPIO) == 4,
paste0("0", MEN$CÓDIGO_MUNICIPIO),
MEN$CÓDIGO_MUNICIPIO)
shp1 <- shp1[order(shp1$COD_MUN),]
MEN <- MEN[order(MEN$CÓDIGO_MUNICIPIO),]
set.seed(123)
Mclust(MInci)
library(mclust)
Mclust(MInci)
Mod1 <- Mclust(MInci, modelNames = "VII", G = 9);Mod1$classification
plot(Mclust(MInci))
Mod1 <- Mclust(MInci, modelNames = "VII", G = 9) #;Mod1$classification
RankBay1 <- as.data.frame(RankBay1) %>%
mutate(COD_MUN = rownames(.)) %>%  # Agregar código de departamento
mutate(COD_MUN = as.character(n2[,2])) %>%  # Asegurar tipo correcto
arrange(match(COD_MUN, Names))
Names <- RankBay1$COD_MUN
RankBay1 <- as.data.frame(RankBay1) %>%
mutate(COD_MUN = rownames(.)) %>%  # Agregar código de departamento
mutate(COD_MUN = as.character(n2[,2])) %>%  # Asegurar tipo correcto
arrange(match(COD_MUN, Names))
RankBay1
Names <- rownames(RankBay1)
RankBay1 <- as.data.frame(RankBay1) %>%
mutate(COD_MUN = rownames(.)) %>%  # Agregar código de departamento
mutate(COD_MUN = as.character(n2[,2])) %>%  # Asegurar tipo correcto
arrange(match(COD_MUN, Names))
set.seed(123)
km <- kmeans(as.numeric(RankBay1$MEDIAS), centers = 9, nstart = 25) #; km$cluster
RankBay1 <- RankBay1 %>%
mutate(cluster = km$cluster)
shp1 <- shp1 %>%
left_join(RankBay1, by = "COD_MUN")
df_clust <- data.frame(
COD_MUN = n2[,2],
Class = Mod1$classification
)
shp1 <- shp1 %>%
left_join(df_clust, by = "COD_MUN")
colors <- c("#fb9062", "#ee5d6c", "#ce4993", "#ff4d00", "#0081a7",
"#00afb9", "#eef942", "#f44040", "#800080")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors,  name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
colors <- c("#fb9062", "#ee5d6c", "#ce4993", "#ff4d00", "#0081a7",
"#00afb9", "#eef942", "#f44040", "#800080")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors,  name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
dev.off()
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors,  name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
qf(o.9,1,8)
qf(o.9,1,8)
qf(0.9,1,8)
colors <- c("#eeaf61", "#ee5d6c", "#ce4993", "#ff4d00", "#0081a7",
"#00afb9", "#eef942", "#f44040", "#800080")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors,  name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
colors <- c("#eeaf61", "#00afb9", "#ee5d6c", "#ff4d00", "#0081a7",
"#ce4993", "#eef942", "#f44040", "#800080")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors,  name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Mapa con MClust
ggplot(data = shp1) +
geom_sf(aes(fill = factor(Class)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster", na.value = "gray80") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR MCLUST DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE MUNICIPIOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
M4 = fread('Data/GibbsModelo4.txt') # Importe de Resultados del modelo 4
Col <- grep("^theta\\d+$", names(M4), value = TRUE)
RankBay <- matrix(NA, ncol = 3, nrow = length(Col))
colnames(RankBay) <- c("INF", "MEDIAS", "SUP")
rownames(RankBay) = rn
RankBay1 = RankBay
rownames(RankBay1) = rn
# Llenado de las medias y cuantiles
RankBay[, "MEDIAS"] <- sapply(M4[, ..Col], mean)
RankBay[, c("INF", "SUP")] <- t(sapply(M4[, ..Col], quantile, probs = c(0.025, 0.975)))
RankBay1[, "MEDIAS"] <- sapply(M4[, ..Col], mean)
RankBay1[, c("INF", "SUP")] <- t(sapply(M4[, ..Col], quantile, probs = c(0.025, 0.975)))
# Ordenar la matriz
RankBay = RankBay[order(RankBay[,2], decreasing = FALSE),]
Cls <- matrix(NA, nrow = nrow(M4), ncol = r)
colnames(Cls) <- rn
# Inicializar la matriz de incidencia
MInci <- matrix(0, nrow = r, ncol = r)
# Iterar sobre cada fila de M4
for (i in 1:nrow(M4)) {
# Aplicar k-means a las medias específicas de los departamentos
km <- kmeans(as.numeric(M4[i, ..Col]), centers = 5, nstart = 25)
Cls[i, ] <- km$cluster
# Calcular la matriz de incidencia para esta iteración
for (j in 1:5) {
b <- (Cls[i, ] == j)  # Vector lógico para el grupo j en la iteración i
MInci <- MInci + (b %*% t(b))  # Sumar la matriz de incidencia
}
}
MInci <- MInci / nrow(M4)
rownames(MInci) <- rn
par(mfrow = c(1, 1))
corrplot::corrplot(corr = MInci, order = "AOE", #"original", "AOE", "FPC", "hclust", "alphabet"
is.corr = FALSE,
addgrid.col = NA,
method = "color",
tl.pos = "lt",
tl.cex = 0.8,
tl.col = 'black')
Mclust(MInci
)
Mod1 <- Mclust(MInci, G = 3, modelNames = "VVI")  #;Mod1$classification
plot(Mod1, what = "classification", dimens = c(1, 2),
main = "Clasificación de los departamentos en 5 grupos")
RankBay1 <- as.data.frame(RankBay1) %>%
mutate(dpto_ccdgo = rownames(.)) %>%  # Agregar código de departamento
mutate(dpto_ccdgo = as.character(rc)) %>%  # Asegurar tipo correcto
arrange(match(dpto_ccdgo, Names))
set.seed(123)
km <- kmeans(as.numeric(RankBay1$MEDIAS), centers = 3, nstart = 25)#; km$cluster
RankBay1 <- RankBay1 %>%
mutate(cluster = km$cluster)
# Filtrar los departamentos que están en Names y ordenarlos
Names <- RankBay1$dpto_ccdgo
shp1 <- shp %>%
filter(dpto_ccdgo %in% Names)
# Coincidencias entre dpto_ccdgo y Names
shp1 <- shp1 %>%
left_join(RankBay1, by = "dpto_ccdgo")
shp1$Class <- Mod1$classification
colors <- c("#eeaf61", "#ee5d6c", "#6a0d83")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Mapa con MClust
ggplot(data = shp1) +
geom_sf(aes(fill = factor(Class)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR MCLUST DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
plot(Mclust(MInci))
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Mapa con MClust
ggplot(data = shp1) +
geom_sf(aes(fill = factor(Class)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR MCLUST DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
shp1
color_palette <- list(
"1" = c("#ffcc99", "#eeaf61"),  # Degradado para Cluster 1
"2" = c("#ff6b81", "#ee5d6c"),  # Degradado para Cluster 2
"3" = c("#b87fd9", "#6a0d83")   # Degradado para Cluster 3
)
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = color_palette[[as.character(unique(shp1$cluster))]],
name = "Media Departamental"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
olor_palette[[as.character(unique(shp1$cluster))]]
color_palette[[as.character(unique(shp1$cluster))]]
color_palette[[as.character(unique(shp1$cluster))]
)
[as.character(unique(shp1$cluster))]
as.character(unique(shp1$cluster))
color_palette[as.character(unique(shp1$cluster))]
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = color_palette[as.character(unique(shp1$cluster))],
name = "Media Departamental"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
color_palette <- list(
"1" = c("#ffcc99", "#eeaf61"),  # Degradado para Cluster 1
"2" = c("#ff6b81", "#ee5d6c"),  # Degradado para Cluster 2
"3" = c("#b87fd9", "#6a0d83")   # Degradado para Cluster 3
)
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = color_palette[as.character(unique(shp1$cluster))],
name = "Media Departamental"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
unlist(color_palette[as.character(unique(shp1$cluster))])
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = unlist(color_palette[as.character(unique(shp1$cluster))]),
name = "Media Departamental"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = unlist(color_palette[as.character(unique(shp1$cluster))]),
name = "MEDIA DEL\nPUNTAJE GLOBAL"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Paletas de colores mejoradas para cada cluster
color_palette <- list(
"1" = colorRampPalette(c("#ffdab9", "#eeaf61"))(100),  # Degradado de durazno claro a naranja
"2" = colorRampPalette(c("#ffb3c1", "#ee5d6c"))(100),  # Degradado de rosa claro a rojo coral
"3" = colorRampPalette(c("#d1a3ff", "#6a0d83"))(100)   # Degradado de lila claro a morado oscuro
)
shp1 <- shp1 %>%
mutate(color = unlist(color_palette[as.character(cluster)]))
colorRampPalette(c("#ffdab9", "#eeaf61"))(100)
colorRampPalette(c("#ffb3c1", "#ee5d6c"))(100)
color_palette <- list(
"1" = c("#ffdab9", "#eeaf61"),  # Degradado para Cluster 1
"2" = c("#ffb3c1", "#ee5d6c"),  # Degradado para Cluster 2
"3" = c("#d1a3ff", "#6a0d83")   # Degradado para Cluster 3
)
ggplot(data = shp1) +
geom_sf(aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = unlist(color_palette[as.character(unique(shp1$cluster))]),
name = "MEDIA DEL\nPUNTAJE GLOBAL"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
color_palette <- list(
"1" = c("#ffdab9", "#eeaf61"),  # Degradado para Cluster 1
"2" = c("#ffb3c1", "#ee5d6c"),  # Degradado para Cluster 2
"3" = c("#d1a3ff", "#6a0d83")   # Degradado para Cluster 3
)
ggplot() +
geom_sf(data = filter(shp1, cluster == 1), aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(colors = color_palette[["1"]], name = "Media (C1)") +
geom_sf(data = filter(shp1, cluster == 2), aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(colors = color_palette[["2"]], name = "Media (C2)") +
geom_sf(data = filter(shp1, cluster == 3), aes(fill = MEDIAS), color = "white", size = 0.2) +
scale_fill_gradientn(colors = color_palette[["3"]], name = "Media (C3)") +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Definir colores base para cada cluster
color_palette <- list(
"1" = c("#ffcc99", "#eeaf61"),  # Degradado para Cluster 1 (naranja)
"2" = c("#ff6b81", "#ee5d6c"),  # Degradado para Cluster 2 (rojo)
"3" = c("#b87fd9", "#6a0d83")   # Degradado para Cluster 3 (morado)
)
# Crear una variable de color ajustada al cluster
shp1 <- shp1 %>%
mutate(fill_color = case_when(
cluster == 1 ~ scales::rescale(MEDIAS, to = c(0, 1)),  # Normaliza la variable dentro del cluster
cluster == 2 ~ scales::rescale(MEDIAS, to = c(0, 1)),
cluster == 3 ~ scales::rescale(MEDIAS, to = c(0, 1))
))
# Mapa con degradados por cluster
ggplot(data = shp1) +
geom_sf(aes(fill = fill_color), color = "white", size = 0.2) +
scale_fill_gradientn(
colors = unlist(color_palette[as.character(unique(shp1$cluster))]),
name = "Media Departamental"
) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Definir colores base para cada cluster
color_palette <- list(
"1" = c("#ffcc99", "#eeaf61"),  # Degradado Cluster 1 (naranja)
"2" = c("#ff6b81", "#ee5d6c"),  # Degradado Cluster 2 (rojo)
"3" = c("#b87fd9", "#6a0d83")   # Degradado Cluster 3 (morado)
)
ggplot(data = shp1) +
# Aplicar gradiente SOLO a los departamentos dentro de cada cluster
geom_sf(aes(fill = ifelse(cluster == 1, MEDIAS, NA)), color = "white", size = 0.2, na.rm = TRUE) +
geom_sf(aes(fill = ifelse(cluster == 2, MEDIAS, NA)), color = "white", size = 0.2, na.rm = TRUE) +
geom_sf(aes(fill = ifelse(cluster == 3, MEDIAS, NA)), color = "white", size = 0.2, na.rm = TRUE) +
# Definir escalas de color separadas para cada cluster
scale_fill_gradientn(colors = color_palette[["1"]], name = "Cluster 1", na.value = NA) +
scale_fill_gradientn(colors = color_palette[["2"]], name = "Cluster 2", na.value = NA) +
scale_fill_gradientn(colors = color_palette[["3"]], name = "Cluster 3", na.value = NA) +
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
shp <- sf::st_read("Data/MGN2023_DPTO_POLITICO/MGN_ADM_DPTO_POLITICO.shp", quiet = TRUE)
shp1 <- shp %>%
filter(dpto_ccdgo %in% Names)
shp1 <- shp1 %>%
left_join(RankBay1, by = "dpto_ccdgo")
shp1$Class <- Mod1$classification
colors <- c("#eeaf61", "#ee5d6c", "#6a0d83")
# Mapa con K-Means
ggplot(data = shp1) +
geom_sf(aes(fill = factor(cluster)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR KMEANS DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Mapa con MClust
ggplot(data = shp1) +
geom_sf(aes(fill = factor(Class)), color = "white", size = 0.2) +
scale_fill_manual(values = colors, name = "Cluster") +  # Usar colores personalizados
ggtitle("AGRUPAMIENTO POR MCLUST DE LA MEDIAS GLOBALES",
subtitle = "CLUSTERS DE DEPARTAMENTOS EN COLOMBIA") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, face = "bold", hjust = 0.5, color = "grey40"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
